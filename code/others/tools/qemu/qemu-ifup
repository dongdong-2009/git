#! /bin/sh
# Script to bring a network (tap) device for qemu up.
# The idea is to add the tap device to the same bridge
# as we have default routing to.

# in order to be able to find brctl



### 注释掉原来的脚本
#给传进来的网卡配置ip
#ifconfig $1 10.8.0.1			

## 获取原来主系统 eth0 的 IP 和网关
#IP=`ifconfig eth0 | grep "inet addr" | awk '{print $2}' | sed 's/addr://'`
#GATEWAY=`route -n | grep ^0.0.0.0 | awk '{print $2}'`

## 删除 eth0 的 IP
#ip addr del $IP dev eth0

## 激活 tap0 ($1 是qemu传递过来的网卡名称，即tap0)
ip link set $1 up

## 停止并删除存在的网桥
#ip link set br0 down &>/dev/null
#brctl delbr br0 &>/dev/null

## 添加网桥接口 br0
#brctl addbr br0

## 将 eth0 加入网桥
#brctl addif br0 eth0

## 将 tap0 加入网桥
brctl addif br0 $1

## 启动网桥
#ifconfig br0 $IP up

## 添加默认路由
#route add default gw $GATEWAY

# 下面没有了
exit 0




PATH=$PATH:/sbin:/usr/sbin
ip=$(which ip)

if [ -n "$ip" ]; then
   ip link set "$1" up
else
   brctl=$(which brctl)
   if [ ! "$ip" -o ! "$brctl" ]; then
     echo "W: $0: not doing any bridge processing: neither ip nor brctl utility not found" >&2
     exit 0
   fi
   ifconfig "$1" 0.0.0.0 up
fi

switch=$(ip route ls | \
    awk '/^default / {
          for(i=0;i<NF;i++) { if ($i == "dev") { print $(i+1); next; } }
         }'
        )

# only add the interface to default-route bridge if we
# have such interface (with default route) and if that
# interface is actually a bridge.
# It is possible to have several default routes too
for br in $switch; do
    if [ -d /sys/class/net/$br/bridge/. ]; then
        if [ -n "$ip" ]; then
          ip link set "$1" master "$br"
        else
          brctl addif $br "$1"
        fi
        exit	# exit with status of the previous command
    fi
done

echo "W: $0: no bridge for guest interface found" >&2
